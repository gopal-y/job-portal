{"version":3,"sources":["components/Employee/index.js","components/EmployeeAction/index.js","components/Loader/index.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","props","id","image","name","className","src","alt","EmployeeAction","useParams","useState","isLoading","setLoading","employee","setEmployee","useEffect","a","fetch","employeeApiRes","json","empList","empDetails","filter","e","console","log","message","style","width","Image","Loader","App","history","useHistory","isSearching","setSearching","searchInput","setSearchInput","employeeList","setEmployeeList","filteredEmpList","setFilteredEmpList","searchTimer","filterEmployeeList","length","searchInputText","toLowerCase","filteredList","emp","includes","type","autoComplete","value","onChange","target","trim","onKeyUp","keyCode","clearTimeout","setTimeout","placeholder","map","onClick","_","push","routeToEmp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RootApp","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb4f28c6.chunk.js","sourcesContent":["import './Employee.css';\n\nfunction Employee(props) {\n    const { id, image, name } = props;\n\n    return (\n        <div className=\"employee-div\">\n            <div className=\"image-div\">\n                <img src={image} alt={name}/>\n            </div>\n            <div className=\"details-div\">\n                <p>Name: {name}</p>\n            </div>\n       </div>\n    )\n}\n\nexport default Employee;","import './style.css';\n\nimport {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { Employee } from '../';\n\nconst DATA_URL = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json';\nfunction EmployeeAction() {\n    const { id } = useParams()\n    const [isLoading, setLoading] = useState(true);\n    const [employee, setEmployee] = useState(null);\n    \n    let searchTimer = null;\n    /**\n     *  To fetch List of employees\n     */\n    useEffect(() => {\n        // using IIFE to make use of try/catch with async/await as useEffect callbacks are considered to be synchronous\n        setLoading(true);\n        (async () => {\n            try {\n                const employeeApiRes = await fetch(DATA_URL);\n                const empList = await employeeApiRes.json();\n                const empDetails = (empList.filter(e => e.id === id) || [])[0];\n                \n                setEmployee(empDetails);\n                setLoading(false)\n            }\n            catch (e) {\n                console.log(e.message)\n            }\n        })()\n        // empty dependency list to call this useEffect only once\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    return (<>{(!isLoading && employee?.name) ? <div style={{width:\"280px\"}}><Employee id={id} name={employee.name} image={employee.Image} />\n        <button className=\"success btn\" >Shortlist</button>\n        <button className=\"reject btn\">Reject</button>\n    </div> : ''}</>);\n}\n\nexport default EmployeeAction;","import './loader.css';\n\nfunction Loader() {\n    return (\n        <div className=\"loader-div\">\n            <div className=\"loader\"></div>\n      </div>\n    )\n}\n\nexport default Loader;","import './App.css';\n\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Employee,\n  Loader,\n} from './components';\n\nconst DATA_URL = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json'\nfunction App() {\n  \n  let history = useHistory();\n  const [isLoading, setLoading] = useState(true);\n  const [isSearching, setSearching] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const [employeeList, setEmployeeList] = useState([]);\n  const [filteredEmpList, setFilteredEmpList] = useState([]);\n  let searchTimer = null;\n  /**\n   *  To fetch List of employees\n   */\n  useEffect(() => {\n    // using IIFE to make use of try/catch with async/await as useEffect callbacks are considered to be synchronous\n    setLoading(true);\n    (async () => {\n      try {\n        const employeeApiRes = await fetch(DATA_URL);\n        const empList = await employeeApiRes.json();\n\n        setEmployeeList(empList);\n        setFilteredEmpList(empList);\n        setLoading(false)\n      }\n      catch (e) {\n        console.log(e.message)\n      }\n    })()\n    // empty dependency list to call this useEffect only once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  function handleSearchInputChange(e) {\n    setSearchInput((e.target.value || \"\").trim())\n  }\n\n  function filterEmployeeList() {\n    if (searchInput.length === 0) {\n      setSearching(false);\n      return setFilteredEmpList(employeeList)\n    }\n\n    const searchInputText = searchInput.toLowerCase();\n    const filteredList = employeeList.filter(emp => {\n      return emp.name.toLowerCase().includes(searchInputText)\n    })\n\n    setFilteredEmpList(filteredList)\n    setSearching(false);\n  }\n\n  function search(e) {\n    const codes = [8, 9, 13, 32, 46];\n    if (!((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 65 && e.keyCode <= 90) || (codes.includes(e.keyCode))))\n      return\n\n    if (searchTimer) {\n      clearTimeout(searchTimer)\n    }\n\n    setSearching(true)\n    searchTimer = setTimeout(filterEmployeeList, 2000);\n  }\n\n  function routeToEmp(e) {\n    console.log(e.id)\n    history.push('/employee/' + e.id)\n  }\n\n  return (<>\n    {isLoading ? <Loader /> :\n      <div className=\"main-div\">\n        <div className=\"search-bar\">\n          <input type=\"text\" id=\"search-input\" autoComplete='off' className=\"search-input\" value={searchInput} onChange={handleSearchInputChange} onKeyUp={search} placeholder='Search an Employee' />\n        </div>\n        <div className=\"employee-list-div\">\n          {isSearching ? <Loader /> : <>{\n            employeeList.length && (<>\n              <center>\n                <p>Total Employees: {filteredEmpList.length}</p>\n              </center>\n              <div className=\"employee-list\">\n                {filteredEmpList.map(e => {\n                  return <div className=\"wrapper\" onClick={_ => { routeToEmp(e) }}>\n                    <Employee key={e.id} id={e.id} image={e.Image} name={e.name} />\n                  </div>\n                })}\n              </div>\n            </>\n            )}\n          </>\n          }\n        </div>\n      </div>\n    }\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\nimport { EmployeeAction } from './components';\nimport reportWebVitals from './reportWebVitals';\n\nconst RootApp = () => {\n  return <Router>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/employee/:id\" component={EmployeeAction} />\n    </Switch>\n  </Router>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}